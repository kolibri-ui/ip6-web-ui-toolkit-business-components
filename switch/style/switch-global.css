:root {
    --switch-background: #bdbdbd;
    --switch-disabled: #767676;
    --switch-icon-color: #14142B;
    --switch-thumb-color: #184BCD;
    --switch-thumb-background: rgba(24, 75, 205, 0.4);

    --neumorph-width: 84px;
    --neumorph-height: 36px;
    --neumorph-white: #FCFCFC;
    --neumorph-indeterminate: linear-gradient(270deg, #184BCD 0%, #184BCD 50.15%, #BDBDBD 50.16%);
    --neumorph-on: #184BCD;
    --neumorph-off: #BDBDBD;
    --neumorph-indeterminate-disabled: linear-gradient(270deg, var(--neumorph-on-disabled) 0%, var(--neumorph-on-disabled) 50.15%, var(--neumorph-off-disabled) 50.16%);
    --neumorph-on-disabled: #9DB1E4;
    --neumorph-off-disabled: #DDDDDD;

    --neumorph-arrow-start-position: 56px;
    --neumorph-arrow-end-position: 59px;
    --neumorph-thumb-size: 32px;

    --switch-icon-size: 24px;
    --slim-width: 84px;
    --slim-height: 38px;
    --slim-indeterminate: var(--background);
    --slim-default-border: #675555;
    --slim-background-disabled: #F0F0F0;
    --slim-border-disabled: #B6AFAF;
    --slim-off-disabled: #DDDDDD;

    --slim-arrow-start-position: 39px;
    --slim-arrow-end-position: 42px;
    --slim-arrow-color: #555A67;
}

.switch {
    position: relative;
    display: inline-block;
    width: var(--neumorph-width);
    height: var(--neumorph-height);
}

/* Make classical Checkbox invisible*/
.switch input {
    opacity: 0;
}

.switch-icon {
    position: absolute;
    cursor: pointer;
    height: var(--switch-icon-size);
    top: 5px;
    z-index: 1;
    pointer-events: none;
}

.switch-icon::selection {
    color: transparent;
}

.switch-icon.off {
    left: 0;
}

.switch-icon.on {
    right: 0;
}

.thumb {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 34px;
    background-color: var(--switch-background);
    transition: .2s;
}

.thumb::before {
    margin-left: 2px;
    margin-right: 2px;
    position: absolute;
    content: "";
    height: var(--neumorph-thumb-size);
    width: var(--neumorph-thumb-size);
    left: 0;
    bottom: 2px;
    border-radius: 50%;
    background-color: var(--neumorph-white);
    transition: .2s;
}

.switch input:checked + .thumb::before {
    transform: translateX(150%);
}

.switch input:indeterminate + .thumb::before {
    transform: translateX(75%);
}

/**
States
 */
.indeterminate {
    background: var(--neumorph-indeterminate);
}

.on {
    background: var(--neumorph-on);
}

.off {
    background: var(--neumorph-off);
}

.disabled > .off {
    background: var(--neumorph-off-disabled);
}

.disabled > .on {
    background: var(--neumorph-on-disabled);
}

.disabled > .indeterminate {
    background: var(--neumorph-indeterminate-disabled);
}

.read-only > .off {
    background: var(--neumorph-off-disabled);
}

.read-only > .on {
    background: var(--neumorph-on-disabled);
}

.read-only > .indeterminate {
    background: var(--neumorph-indeterminate-disabled);
}

.disabled {
    pointer-events: none;
}

.disabled > .thumb::before{
    background: #F6F6F6;
}


.read-only {
    pointer-events: none;
}

.focus > .thumb {
    box-shadow: 0 0 6px 0 rgba(24, 75, 205, 0.94);
    outline: none;
}

.hover > .thumb {
    box-shadow: 0 0 8px 0 rgba(24, 75, 205, 0.6);
    outline: none;
}

.switch:focus {
    box-shadow: 0 0 15px rgba(24, 75, 205, 0.7);
    outline: none;
}

.required > .thumb {
    background:  #EB5656;
}


/*TODO: define error colors */
.required .arrow-indeterminate-left {
    border: solid rgba(169, 31, 31, 0.5);
    border-width: 0 3px 3px 0;
}

/*TODO: define error colors */
.required .arrow-indeterminate-right {
    border: solid rgba(169, 31, 31, 0.5);
    border-width: 0 3px 3px 0;
}


.arrow {
    position: absolute;
    top: 37%;
    width: 10px;
    height: 10px;
    border: solid var(--neumorph-white);
    opacity: 90%;
    border-width: 0 1px 1px 0;
    border-radius: 1px;
}

.arrow-left {
    position: absolute;
    transform: rotate(135deg);
    animation: moveToLeft 2s infinite ease-in-out;

    display: none;
    pointer-events: none;
}

.arrow-right {
    position: absolute;
    transform: rotate(-45deg);
    animation: moveToRight 2s infinite ease-in-out;

    display: none;
    pointer-events: none;
}


@keyframes moveToLeft {
    0% {
        right: var(--neumorph-arrow-start-position);
    }
    50% {
        right: var(--neumorph-arrow-end-position);
    }
    100% {
        right: var(--neumorph-arrow-start-position);
    }
}

@keyframes moveToRight {
    0% {
        left: var(--neumorph-arrow-start-position);
    }
    50% {
        left: var(--neumorph-arrow-end-position);
    }
    100% {
        left: var(--neumorph-arrow-start-position);
    }
}