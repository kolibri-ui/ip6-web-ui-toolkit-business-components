
.switch {
    position: relative;
    display: inline-block;
    /*width: var(--two-state-width);*/
    /*height: var(--switch-height);*/
}

.switch.three-state {
    width: var(--polymorph-width);
    height: var(--polymorph-height);
}

/*!* Auto layout *!

display: flex;
flex-direction: row;
justify-content: space-between;
align-items: center;
padding: 30px 7px;

position: absolute;
width: 84px;
height: 36px;
left: 0px;
top: 0px;*/

.switch-icon {
    position: absolute;
    cursor: pointer;
    height: var(--switch-icon-height);
    top: 7px;
    z-index: 1;
}

.switch-icon::selection {
    color: transparent;
}

.switch-icon.off {
    left: 5px;
}

.switch-icon.on {
    right: 7px;
}

.switch-icon.indeterminate {
    left: 71px;
}

.closeOverlay-icon {
    position: relative;
    cursor: pointer;
    height: var(--switch-icon-height);
    z-index: 1;
    align-self: end;
}

/* Todo make it invisible*/
.switch input {
    position: absolute;
    left: 200px;
    width: 20px;
    height: 20px;

   /* opacity: 0; */
}


.thumb {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 34px;
    background-color: var(--switch-background);

    transition: .2s;
}

.thumb:before {
    margin-left: 2px;
    margin-right: 2px;
    position: absolute;
    content: "";
    height: 32px;
    width: 32px;
    left: 0;
    bottom: 2px;
    border-radius: 50%;
    background-color: var(--polymorph-thumb-color);
   /* box-shadow: 0 0 0 2px var(--switch-thumb-color); */
    transition: .2s;
    z-index: 1;
}

/**
Three State Styles
 */


.switch.three-state input:checked + .thumb:before {
   /* -webkit-transform: translateX(130px);
    -ms-transform: translateX(130px);
    transform: translateX(130px);*/

    transform: translateX(150%);
}

.switch.three-state input:indeterminate + .thumb:before {
/*    -webkit-transform: translateX(66px);
    -ms-transform: translateX(66px);
    transform: translateX(66px);*/

    transform: translateX(75%);

}

/* indeterminate state linear color gradient */
.indeterminate {
    background: var(--polymorph-indetermiante);
}

.on {
    background: var(--polymorph-on);
}

.off {
    background: var(--polymorph-off);
}

/**
Two State Styles
 */

.switch input:checked + .thumb:before {
/*    -webkit-transform: translateX(69px);
    -ms-transform: translateX(69px);
    transform: translateX(69px);*/

    /*transform: translateX(0%);*/
}


/**
States
 */
.focus > .thumb {
    box-shadow: 0 0 6px 0 rgba(24, 75, 205, 0.94);
    outline: none;
}

.hover > .thumb {
    box-shadow: 0 0 8px 0 rgba(24, 75, 205, 0.6);
    outline: none;
}

.disabled {
    pointer-events: none;
}

.disabled > .thumb {
    background-color: #767676;
    opacity: 60%;
}

.disabled > .switch-icon {
    opacity: 40%;
}

.read-only {
    pointer-events: none;
}

.read-only > .thumb:before {
    background-color: rgba(24, 75, 205, 0.4);
    box-shadow: #184BCD;
}

.switch:focus {
    box-shadow: 0 0 15px rgba(24, 75, 205, 0.7);
    outline: none;
}

.required > .thumb {
    /*  box-shadow: 0 0 15px rgb(169, 31, 31); */
   background:  #EB5656;
}

/*!*TODO: define error colors *!
.required > .thumb:before {
    box-shadow: 0 0 0 2px rgb(169, 31, 31);
}*/

/*TODO: define error colors */
.required .arrow-indeterminate-left {
    border: solid rgba(169, 31, 31, 0.5);
    border-width: 0 3px 3px 0;
}

/*TODO: define error colors */
.required .arrow-indeterminate-right {
    border: solid rgba(169, 31, 31, 0.5);
    border-width: 0 3px 3px 0;
}


.arrow {
    position: absolute;
    top: 14px;
    width: 10px;
    height: 10px;
    border: solid rgba(24, 75, 205, 0.2);
    border-width: 0 3px 3px 0;

}

.arrow-right {
    transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
    animation: moveToRight 1s infinite ease-in-out;
    display: none;
}

.arrow-left {
    transform: rotate(135deg);
    -webkit-transform: rotate(135deg);
    animation: moveToLeft 1s infinite ease-in-out;
    display: none;
}

.arrow-indeterminate-right {
    position: absolute;
    transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
    animation: moveToRightIndeterminate 1s infinite ease-in-out;
    border-width: 0 3px 3px 0;
    display: none;
}

.arrow-indeterminate-left {
    transform: rotate(135deg);
    -webkit-transform: rotate(135deg);
    animation: moveToLeftIndeterminate 1s infinite ease-in-out;
    border-width: 0 3px 3px 0;
    display: none;
}

@keyframes moveToRight {
    0% {
        left: 34px;
    }
    100% {
        left: 37px;
    }
}

@keyframes moveToRightIndeterminate {
    0% {
        left: 100px;
    }
    100% {
        left: 103px;
    }
}


@keyframes moveToLeft {
    0% {
        right: 34px;
    }
    100% {
        right: 37px;
    }
}

@keyframes moveToLeftIndeterminate {
    0% {
        right: 100px;
    }
    100% {
        right: 103px;
    }
}
